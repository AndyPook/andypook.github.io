<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RabbitMQ on A6k</title>
    <link>https://pook.info/techs/rabbitmq/</link>
    <description>Recent content in RabbitMQ on A6k</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <copyright>© A6k</copyright>
    <lastBuildDate>Thu, 28 Feb 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://pook.info/techs/rabbitmq/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GfK</title>
      <link>https://pook.info/cv/gfk/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://pook.info/cv/gfk/</guid>
      <description>Scans sources for pricing information. Data is normalised, translated, aggregated into data stores with api’s and a web ui. Clients can then track actual selling prices of their products or competitor pricing policies.
Processing via a messaging platform. Migration to dotnet Core, Linux containers, Kubernetes, Kafka. I worked across the system. Also created frameworks to ease creation of services and api’s, applying standards and cross cutting concerns. AWS, net46+, dotnetCore, RabbitMQ, Kafka, ElasticSearch, Api’s, caching, messaging, vsts, git, docker, kubernetes, helm</description>
    </item>
    
    <item>
      <title>Global Radio</title>
      <link>https://pook.info/cv/globalradio/</link>
      <pubDate>Fri, 30 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pook.info/cv/globalradio/</guid>
      <description>Asp.net WebApi, Angular2, TypeScript, Kendo, dapper, SqlServer, CQS, RabbitMQ. Resolved several performance issues (mainly threading and async). Reworked backend framework, services and build system to improve DRYness and reduce developer friction.</description>
    </item>
    
  </channel>
</rss>